{
    "buttons": [
        {
            "sourceType": "python", 
            "image": "hashRename.png", 
            "label": "Hash Renamer", 
            "command": "from capito.maya.util.names import HashRenamer\nHashRenamer()", 
            "image1": "hashRename.png", 
            "annotation": "Hash Renamer: Rename with auto numbering."
        }, 
        {
            "sourceType": "python", 
            "image": "addGroup.png", 
            "label": "Add Group", 
            "command": "import pymel.core as pc\nfrom capito.maya.util.hirarchies import add_group\nsel=pc.selected()\nif sel:\n\tadd_group(sel[0])", 
            "image1": "addGroup.png", 
            "annotation": "Add group above selected object."
        }, 
        {
            "sourceType": "python", 
            "image": "addShapes.png", 
            "label": "Add Shapes", 
            "command": "import pymel.core as pc\nfrom capito.maya.geo.shapes import add_shapes\n\nsel = pc.selected()\nif len(sel) != 2:\n\tpc.warning('Please selecte exactly two objects.')\nelse:\n\tadd_shapes(sel[0], sel[1])", 
            "image1": "addGroup.png", 
            "annotation": "Add shapes found in the first selected object to the second selected object."
        }, 
        {
            "type": "separator"
        }, 
        {
            "sourceType": "mel", 
            "image": "kinJoint.png", 
            "label": "JointTool", 
            "command": "JointTool", 
            "image1": "kinJoint.png", 
            "annotation": "JointTool", 
            "doubleClickCommand": "JointToolOptions"
        }, 
        {
            "sourceType": "python", 
            "image": "splitJoint.png", 
            "label": "Split Selected Joints", 
            "command": "from capito.maya.rig.joints import SplitSelected\nSplitSelected()", 
            "image1": "splitJoint.png", 
            "annotation": "Split Selected\nJoints"
        }, 
        {
            "type": "separator"
        }, 
        {
            "sourceType": "mel", 
            "image": "kinHandle.png", 
            "label": "IKHandleTool", 
            "command": "IKHandleTool", 
            "image1": "kinHandle.png", 
            "annotation": "IKHandleTool", 
            "doubleClickCommand": "IKHandleToolOptions"
        }, 
        {
            "sourceType": "python", 
            "image": "stretchyIKSetup.png", 
            "label": "Stretchy IK Setup", 
            "command": "import capito.maya.rig.iks as iks\nsik = iks.StretchyIK()\nsik.gui()", 
            "image1": "stretchyIKSetup.png", 
            "annotation": "Create a Stretchy IK Setup from an existing IK."
        }, 
        {
            "type": "separator"
        }, 
        {
            "sourceType": "mel", 
            "image": "ikSplineSolver.svg", 
            "label": "IKSplineHandleTool", 
            "command": "IKSplineHandleTool", 
            "image1": "ikSplineSolver.svg", 
            "annotation": "IKSplineHandleTool", 
            "doubleClickCommand": "IKSplineHandleToolOptions"
        }, 
        {
            "sourceType": "python", 
            "image": "stretchySplineSetup2.png", 
            "label": "Stretchy Spline IK Manager", 
            "command": "from capito.maya.rig.splineiks import SplineIKManager\nSplineIKManager()", 
            "image1": "stretchySplineSetup2.png", 
            "annotation": "Create and manage Stretchy Spline IK Rigs."
        }, 
        {
            "type": "separator"
        }, 
        {
            "sourceType": "python", 
            "image": "rigIcons.png", 
            "label": "Rig Icons", 
            "command": "from capito.maya.rig.icons import RigIcons\nRigIcons().gui()", 
            "image1": "rigIcons.png", 
            "annotation": "Rig Icons"
        }, 
        {
            "sourceType": "python", 
            "image": "stickyControlerSetup.png", 
            "label": "Sticky Controler", 
            "command": "from capito.maya.rig.ctrl import StickyControllers\nStickyControllers()", 
            "image1": "stickyControlerSetup.png", 
            "annotation": "Sticky Controler Setup and Editing"
        },
        {
            "type": "separator"
        },
        {
            "sourceType": "python",
            "image": "lookManager.png",
            "label": "Look Manager",
            "command": "from capito.maya.render.look_manager import LookManager\nLookManager()",
            "image1": "lookManager.png",
            "annotation": "Look Manager. Save and reapply shaders and shader assignments."
        },
        {
            "sourceType": "python",
            "image": "arnold_drivers.png",
            "label": "Arnold Drivers",
            "command": "from capito.maya.render import output_drivers\n\noutput_drivers.main()",
            "image1": "arnold_drivers.png",
            "annotation": "Arnold Driver Manager. Easy assignment of AOVs to seperate drivers."
        },
        {
            "type": "separator"
        },
        {
            "sourceType": "python",
            "image": "sequence_encoder.png",
            "label": "Sequence Encoder",
            "command": "from capito.core.encoder.ui import SequenceEncoderUI\nSequenceEncoderUI()",
            "image1": "sequence_encoder.png",
            "annotation": "Encode image sequences with FFMPEG and add text burnins."
        },
        {
            "sourceType": "python",
            "image": "hlrs_export.png",
            "label": "Export Scene for HLRS",
            "command": "from capito.haleres.settings import Settings\nfrom capito.maya.render.ass.ui import AssExporter\nAssExporter(Settings('K:/pipeline/hlrs/settings.json'))",
            "image1": "hlrs_export.png",
            "annotation": "Export Scene for Rendering at HLRS."
        }
    ], 
    "name": "cg", 
    "replace": true,
    "position": 20
}
